name: Packer CI Pipeline
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
 
jobs:
  Build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Starting Slack Notification
        uses: act10ns/slack@v1
        with:
          status: starting
          channel: '#githubaction-test'
          message: Packer workflow initied
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

      - uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          message_format: '{emoji} ${{ github.event.head_commit.author.name }} ${{ github.event.head_commit.message }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
 
      # - name: Ckeckout Repository
      #   uses: actions/checkout@v3
 
      # - name: Initialize Template
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: init
      #     target: nginx-app.pkr.hcl
 
      # - name: Validate Template
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: validate
      #     arguments: -syntax-only
      #     target: nginx-app.pkr.hcl
 
      # - name: Build Artifact
      #   uses: hashicorp/packer-github-actions@master
      #   with:
      #     command: build
      #     arguments: "-color=false -on-error=abort"
      #     target: nginx-app.pkr.hcl
      #     working_directory: .
      #   env:
      #     PACKER_LOG: 1
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
 
      - name: Slack Notification
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubaction-test'
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}